#include "register_recovery.hpp"
#include <chrono>

using namespace std;

int main(){
    auto start = chrono::high_resolution_clock::now();
    register_recovery rr(2.336f, 6.009f);
    rr.set_critical_set();
    string gamma_template = "100000101010101100000100011110000010001100100000111011010001001010101101110001100100000100010110011101000010001010110110010000110000110101010110000001111100110100011111001101101000100111100101111011111101010001001100100001010110110101111001011000110000111011";
    rr.set_gamma_template(gamma_template);
    rr.recover_L1();

    rr.set_quantiles(2.336f, 6.121f);
    rr.set_critical_set();
    gamma_template = "1000001010101011000001000111100000100011001000001110110100010010101011011100011001000001000101100111010000100010101101100100001100001101010101100000011111001101000111110011011010001001111001011110111111010100010011001000010101101101011110010110001100001110110101000";
    rr.set_gamma_template(gamma_template);
    rr.recover_L2();

    gamma_template = "10000010101010110000010001111000001000110010000011101101000100101010110111000110010000010001011001110100001000101011011001000011000011010101011000000111110011010001111100110110100010011110010111101111110101000100110010000101011011010111100101100011000011101101010000100100101100110111011111011100101101000001110011110111001000100010111010111110011011010100001011100000110011000011101111110001010101001110111101011001110000111101111100101001011010101111000010011010000001100010110010011111001011001000111110111000111011110101110000100110010010111001110001111000100011100010101111111110010000001000111110100110111010111110111001101111100110100101100101101110111110110101010111001011100111001000100010000110000011001011001110110111000010000101101100111001100001101011000010000010010011100111010000001101010101110110101001000000111100010011010100010001101010111110001100010001010110010000111000000100110000001110011101111101111011111011010110101111111001011001011000011001101001011001100000001010101011011100101111110000111010000110101100010101111010101101010010011011111100110100101101111010101010100101000000101011011101110001110000111110011110011000101001001010001111101101101010010001000101110101000110110100000101110110111001110000011111110111000011011011111011011101101110001110011100010010100111111110100111011111101110111000111110011110010001001100010111111101011011110100011011010111001100111000010101000111100101000110001011011010010010110110111011001101110010100001111101110001011101010000100111001101111101111000011000111111011111011000000110000000110010001101001001111100110101011011000100100010100111011111111011101010011111010001000101100000011101011110110010001111000111100100100011110001111110001001000100001110100111100110001110101111001101110001100100110111110100110000111111011101000011111101111000100111110010000110101111111111100001011011010110111001000001111001011101110010100100110111111001000000000111001110000100010101111001110100010111110011100111001000110010011101100011111101100011100101111100010111110110010010101110011000";
    rr.set_full_gamma_template(gamma_template);
    rr.recover_L3();
    auto end = chrono::high_resolution_clock::now();
    cout << "Done in: " << chrono::duration_cast<chrono::seconds>(end-start).count() << "s";
    return 0;
}